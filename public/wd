<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sistema de Chat</title>
  <meta name="theme-color" content="#4a69bd">
  <link rel="manifest" href="manifest.json">
  <link rel="icon" type="image/png" href="favicon.png">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    /* Variables globales */
    :root {
      --color-primary: #4a69bd;
      --color-primary-light: #5a79cd;
      --color-primary-dark: #3a5bbf;
      --color-accent: #ff9800;
      --color-light: #ffffff;
      --color-text: #333333;
      --color-text-secondary: #666666;
      --color-dark: #2d2d2d;
      --color-gray: #999999;
      --color-gray-light: #e0e0e0;
      --color-gray-dark: #666666;
      --color-bg-light: #f5f7fa;
      --color-success: #2ecc71;
      --color-error: #e74c3c;
      
      --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.12);
      --shadow-md: 0 3px 8px rgba(0, 0, 0, 0.15);
      --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.18);
      
      --border-radius-sm: 8px;
      --border-radius-md: 12px;
      --border-radius-lg: 18px;
      
      --spacing-xs: 5px;
      --spacing-sm: 8px;
      --spacing-md: 12px;
      --spacing-lg: 16px;
      --spacing-xl: 24px;
      
      --font-size-xs: 12px;
      --font-size-sm: 14px;
      --font-size-md: 16px;
      --font-size-lg: 18px;
      
      --transition-short: 0.2s ease;
      --transition-medium: 0.3s ease;
      --sidebar-width: 280px;
      --sidebar-collapsed-width: 70px;
      --sidebar-mobile-width: 280px;
    }

    /* Reseteo y estilos base */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html {
      touch-action: manipulation;
      -webkit-text-size-adjust: 100%;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--color-bg-light);
      color: var(--color-text);
      line-height: 1.5;
      transition: background-color var(--transition-medium), color var(--transition-medium);
      height: 100vh;
      display: flex;
      overflow: hidden;
      width: 100%;
      position: fixed;
    }

    /* Layout principal */
    .app-container {
      display: flex;
      width: 100%;
      height: 100%;
      overflow: hidden;
      position: relative;
    }

    /* Barra lateral */
    .sidebar {
      width: var(--sidebar-width);
      background-color: var(--color-primary-dark);
      display: flex;
      flex-direction: column;
      flex-shrink: 0;
      transition: transform var(--transition-medium), width var(--transition-medium);
      box-shadow: var(--shadow-md);
      z-index: 100;
      height: 100%;
    }

    /* Cabecera de la barra lateral */
    .sidebar-header {
      padding: var(--spacing-lg);
      display: flex;
      align-items: center;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .app-title {
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      color: var(--color-light);
    }

    .app-icon {
      width: 28px;
      height: 28px;
      flex-shrink: 0;
    }

    .app-title h1 {
      font-size: var(--font-size-lg);
      font-weight: 600;
      margin: 0;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    /* Estado de conexión */
    .connection-status {
      margin-top: var(--spacing-md);
      padding: var(--spacing-sm) var(--spacing-md);
      border-radius: var(--border-radius-sm);
      background-color: rgba(0, 0, 0, 0.2);
      color: var(--color-light);
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      font-size: var(--font-size-xs);
      width: fit-content;
    }

    .status-indicator {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      display: inline-block;
      flex-shrink: 0;
    }

    .disconnected {
      background-color: var(--color-error);
    }

    .connected {
      background-color: var(--color-success);
    }

    /* Información del usuario en la barra lateral */
    .user-profile {
      padding: var(--spacing-lg);
      display: flex;
      align-items: center;
      gap: var(--spacing-md);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      margin-top: auto;
    }

    .user-avatar {
      width: 42px;
      height: 42px;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.2);
      color: var(--color-light);
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      font-size: var(--font-size-md);
      flex-shrink: 0;
    }

    .user-details {
      flex-grow: 1;
      min-width: 0; /* Importante para el texto truncado */
    }

    .username {
      color: var(--color-light);
      font-weight: 600;
      font-size: var(--font-size-sm);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .user-org {
      color: rgba(255, 255, 255, 0.7);
      font-size: var(--font-size-xs);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .logout-button {
      background-color: transparent;
      border: none;
      color: rgba(255, 255, 255, 0.7);
      cursor: pointer;
      font-size: var(--font-size-lg);
      padding: var(--spacing-xs);
      border-radius: 50%;
      transition: background-color var(--transition-short), color var(--transition-short);
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      width: 40px;
      height: 40px;
    }

    .logout-button:hover {
      background-color: rgba(255, 255, 255, 0.1);
      color: var(--color-light);
    }

    /* Área principal de chat */
    .chat-main {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      overflow: hidden;
      position: relative;
      width: calc(100% - var(--sidebar-width));
      transition: width var(--transition-medium);
    }

    /* Cabecera del chat */
    .chat-header {
      padding: var(--spacing-md) var(--spacing-xl);
      background-color: var(--color-light);
      box-shadow: var(--shadow-sm);
      z-index: 5;
      display: flex;
      align-items: center;
      justify-content: space-between;
      min-height: 64px;
    }

    .chat-info {
      display: flex;
      align-items: center;
      gap: var(--spacing-md);
      min-width: 0; /* Para que el texto se pueda truncar */
    }

    .chat-title-container {
      min-width: 0;
      flex-grow: 1;
    }

    .chat-title {
      font-size: var(--font-size-md);
      font-weight: 600;
      color: var(--color-primary-dark);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .chat-subtitle {
      font-size: var(--font-size-xs);
      color: var(--color-gray);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .chat-actions {
      display: flex;
      gap: var(--spacing-md);
      flex-shrink: 0;
    }

    .action-button {
      background-color: transparent;
      border: none;
      cursor: pointer;
      color: var(--color-gray-dark);
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color var(--transition-short), color var(--transition-short);
    }

    .action-button:hover {
      background-color: rgba(0, 0, 0, 0.05);
      color: var(--color-primary);
    }

    /* Contenedor de mensajes */
    .messages-container {
      flex-grow: 1;
      overflow-y: auto;
      padding: var(--spacing-xl) var(--spacing-xl) var(--spacing-md);
      display: flex;
      flex-direction: column;
      gap: var(--spacing-md);
      background-color: var(--color-bg-light);
      -webkit-overflow-scrolling: touch; /* Mejorar el desplazamiento en iOS */
    }

    .message {
      padding: var(--spacing-md) var(--spacing-lg);
      border-radius: var(--border-radius-lg);
      max-width: 80%;
      animation: fadeIn 0.3s ease;
      word-wrap: break-word;
      overflow-wrap: break-word;
      white-space: pre-wrap;
      line-height: 1.5;
      box-shadow: var(--shadow-sm);
      transition: all var(--transition-short);
      position: relative;
    }

    .message:hover {
      box-shadow: var(--shadow-md);
    }

    .message.incoming {
      align-self: flex-start;
      background-color: var(--color-light);
      border-bottom-left-radius: 4px;
    }

    .message.outgoing {
      align-self: flex-end;
      background-color: var(--color-primary);
      color: var(--color-light);
      border-bottom-right-radius: 4px;
    }

    .message-sender {
      font-size: var(--font-size-xs);
      margin-bottom: 4px;
      opacity: 0.7;
    }

    .message-content {
      word-wrap: break-word;
      overflow-wrap: break-word;
      white-space: pre-wrap;
      line-height: 1.5;
      margin-bottom: var(--spacing-xs);
    }

    .message-time {
      font-size: var(--font-size-xs);
      opacity: 0.6;
      margin-top: var(--spacing-xs);
      text-align: right; /* Alineación por defecto */
    }

    .message.incoming .message-time {
      text-align: left; /* Alineación para mensajes entrantes */
    }

    .message.outgoing .message-time {
      text-align: right; /* Alineación para mensajes salientes */
    }

    .message-content img {
      max-width: 100%;
      border-radius: var(--border-radius-sm);
      margin: var(--spacing-xs) 0;
    }

    .message-content a {
      color: var(--color-primary);
      text-decoration: none;
    }

    .message-content a:hover {
      text-decoration: underline;
    }

    .message.outgoing .message-content a {
      color: #9eb3ff;
    }

    .empty-messages {
      text-align: center;
      padding: 40px var(--spacing-lg);
      color: var(--color-gray);
      font-style: italic;
      background-color: rgba(255, 255, 255, 0.7);
      border-radius: var(--border-radius-md);
      margin: auto;
      max-width: 80%;
      box-shadow: var(--shadow-sm);
    }

    /* Formulario de mensajes */
    .message-form-container {
      padding: var(--spacing-lg);
      background-color: var(--color-light);
      border-top: 1px solid var(--color-gray-light);
      z-index: 5;
    }

    .message-form {
      display: flex;
      align-items: center;
      background-color: var(--color-bg-light);
      border-radius: var(--border-radius-lg);
      padding: 6px;
      box-shadow: var(--shadow-sm);
      transition: box-shadow var(--transition-short);
    }

    .message-form:focus-within {
      box-shadow: var(--shadow-md), 0 0 0 2px rgba(74, 105, 189, 0.2);
    }

    .attach-button {
      background-color: transparent;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      cursor: pointer;
      color: var(--color-gray-dark);
      transition: background-color var(--transition-short), color var(--transition-short);
      flex-shrink: 0;
    }

    .attach-button:hover {
      background-color: rgba(0, 0, 0, 0.05);
      color: var(--color-primary);
    }

    .message-input {
      flex-grow: 1;
      padding: var(--spacing-md);
      border: none;
      background-color: transparent;
      font-size: var(--font-size-md);
      outline: none;
      color: var(--color-text);
      min-width: 0; /* Importante para evitar desbordamiento */
    }

    .message-actions {
      display: flex;
      gap: 2px;
      flex-shrink: 0;
    }

    .send-button {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      border: none;
      background-color: var(--color-primary);
      color: var(--color-light);
      cursor: pointer;
      transition: background-color var(--transition-short);
      flex-shrink: 0;
    }

    .send-button:hover {
      background-color: var(--color-primary-dark);
    }

    /* Indicador de escritura */
    .typing-indicator {
      display: flex;
      align-items: center;
      padding: var(--spacing-sm) var(--spacing-lg);
      margin: var(--spacing-xs) 0;
      border-radius: var(--border-radius-lg);
      background-color: rgba(200, 200, 200, 0.3);
      width: fit-content;
      max-width: 70%;
      align-self: flex-start;
    }

    .typing-indicator span {
      height: 8px;
      width: 8px;
      margin: 0 1px;
      background-color: var(--color-gray);
      display: block;
      border-radius: 50%;
      opacity: 0.4;
    }

    .typing-indicator span:nth-of-type(1) {
      animation: typing 1s infinite;
    }

    .typing-indicator span:nth-of-type(2) {
      animation: typing 1s infinite 0.2s;
    }

    .typing-indicator span:nth-of-type(3) {
      animation: typing 1s infinite 0.4s;
    }

    @keyframes typing {
      0% {
        opacity: 0.4;
        transform: translateY(0);
      }
      50% {
        opacity: 1;
        transform: translateY(-5px);
      }
      100% {
        opacity: 0.4;
        transform: translateY(0);
      }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(8px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Overlay para cerrar la barra lateral en dispositivos móviles */
    .sidebar-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 99;
      display: none;
    }

    /* Toggle para mostrar/ocultar barra lateral en móvil */
    .toggle-sidebar {
      background-color: transparent;
      border: none;
      color: var(--color-gray-dark);
      cursor: pointer;
      padding: var(--spacing-xs);
      margin-right: var(--spacing-sm);
      border-radius: 50%;
      width: 36px;
      height: 36px;
      display: none;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
    }

    .toggle-sidebar:hover {
      background-color: rgba(0, 0, 0, 0.05);
    }

    /* Adaptaciones para pantallas medianas (tablets) */
    @media (max-width: 992px) {
      .chat-main {
        width: calc(100% - var(--sidebar-collapsed-width));
      }
      
      .sidebar {
        width: var(--sidebar-collapsed-width);
      }
      
      .app-title h1, 
      .connection-status span:not(.status-indicator),
      .user-details {
        display: none;
      }
      
      .sidebar.expanded {
        width: var(--sidebar-width);
        z-index: 101;
      }
      
      .sidebar.expanded .app-title h1, 
      .sidebar.expanded .connection-status span:not(.status-indicator),
      .sidebar.expanded .user-details {
        display: block;
      }
      
      .sidebar-overlay.active {
        display: block;
      }
    }

    /* Adaptaciones para móviles */
    @media (max-width: 768px) {
      .chat-main {
        width: 100%;
      }
      
      .sidebar {
        position: fixed;
        left: 0;
        top: 0;
        bottom: 0;
        transform: translateX(-100%);
        width: var(--sidebar-mobile-width);
      }
      
      .sidebar.expanded {
        transform: translateX(0);
      }
      
      .app-title h1, 
      .connection-status span:not(.status-indicator),
      .user-details {
        display: block;
      }
      
      .toggle-sidebar {
        display: flex;
      }
    }

    /* Ajustes para pantallas muy pequeñas */
    @media (max-width: 576px) {
      .message {
        max-width: 90%;
        padding: var(--spacing-sm) var(--spacing-md);
      }
      
      .chat-header {
        padding: var(--spacing-md);
      }

      .messages-container {
        padding: var(--spacing-md);
      }

      .message-form-container {
        padding: var(--spacing-md);
      }
      
      .chat-actions {
        gap: var(--spacing-xs);
      }
      
      .action-button {
        width: 32px;
        height: 32px;
      }
    }

    /* Mejoras para dispositivos con pantalla táctil */
    @media (hover: none) and (pointer: coarse) {
      .action-button,
      .attach-button,
      .send-button,
      .logout-button {
        min-height: 44px;
        min-width: 44px;
      }
      
      .messages-container {
        padding-bottom: var(--spacing-xl);
      }
      
      .message-form {
        padding: 8px;
      }
    }

    /* Modo oscuro */
    @media (prefers-color-scheme: dark) {
      body {
        background-color: #1e1e1e;
        color: var(--color-gray-light);
      }
      
      .sidebar {
        background-color: #222;
      }
      
      .chat-main {
        background-color: #1e1e1e;
      }
      
      .chat-header {
        background-color: #2d2d2d;
        color: var(--color-gray-light);
        border-bottom: 1px solid #444;
      }
      
      .chat-title {
        color: var(--color-light);
      }
      
      .messages-container {
        background-color: #242424;
      }
      
      .message.incoming {
        background-color: #3d3d3d;
        color: var(--color-gray-light);
      }
      
      .message-form-container {
        background-color: #2d2d2d;
        border-top: 1px solid #444;
      }
      
      .message-form {
        background-color: #3d3d3d;
      }
      
      .message-input {
        color: var(--color-gray-light);
      }
      
      .empty-messages {
        background-color: rgba(61, 61, 61, 0.7);
        color: #b0b0b0;
      }
      
      .action-button {
        color: var(--color-gray-light);
      }
      
      .action-button:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }
      
      .attach-button {
        color: var(--color-gray-light);
      }
      
      .attach-button:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }
    }
  </style>
</head>
<body>
  <div class="app-container">
    <!-- Overlay para cerrar sidebar en dispositivos móviles -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>
    
    <!-- Barra lateral -->
    <div class="sidebar" id="sidebar">
      <div class="sidebar-header">
        <div class="app-title">
          <svg class="app-icon" width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="white" stroke-width="2"/>
            <path d="M8 12H16M8 8H16M8 16H13" stroke="white" stroke-width="2" stroke-linecap="round"/>
          </svg>
          <h1>Sistema de Chat</h1>
        </div>
      </div>
      
      <div class="connection-status" id="connectionStatus">
        <span class="status-indicator disconnected"></span>
        <span>Desconectado</span>
      </div>
      
      <!-- Perfil de usuario -->
      <div class="user-profile">
        <div class="user-avatar" id="userAvatar">U</div>
        <div class="user-details">
          <div class="username" id="userDisplayName">Usuario</div>
          <div class="user-org" id="userOrg">Organización</div>
        </div>
        <button class="logout-button" onclick="logout()" aria-label="Cerrar sesión">
          <i class="fas fa-sign-out-alt"></i>
        </button>
      </div>
    </div>
    
    <!-- Área principal de chat -->
    <div class="chat-main">
      <div class="chat-header">
        <div class="chat-info">
          <button class="toggle-sidebar" id="toggleSidebar" aria-label="Mostrar/ocultar barra lateral">
            <i class="fas fa-bars"></i>
          </button>
          <div class="chat-title-container">
            <div class="chat-title">Chat General</div>
            <div class="chat-subtitle">Conversación activa</div>
          </div>
        </div>
        <div class="chat-actions">
          <button class="action-button" aria-label="Buscar">
            <i class="fas fa-search"></i>
          </button>
          <button class="action-button" aria-label="Más opciones">
            <i class="fas fa-ellipsis-v"></i>
          </button>
        </div>
      </div>
      
      <div class="messages-container" id="messagesContainer">
        <!-- Los mensajes se cargarán dinámicamente aquí -->
        <div class="empty-messages">
          No hay mensajes aún. ¡Comienza la conversación!
        </div>
      </div>
      
      <div class="message-form-container">
        <form class="message-form" id="messageForm">
          <button type="button" class="attach-button" id="attachButton" aria-label="Adjuntar archivo">
            <i class="fas fa-paperclip"></i>
          </button>
          <input 
            type="text" 
            class="message-input" 
            id="messageInput" 
            placeholder="Escribe un mensaje..." 
            autocomplete="off"
            aria-label="Mensaje"
          >
          <div class="message-actions">
            <button type="button" class="attach-button" aria-label="Emojis">
              <i class="far fa-smile"></i>
            </button>
            <button type="submit" class="send-button" aria-label="Enviar mensaje">
              <i class="fas fa-paper-plane"></i>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Template para el indicador de escritura -->
  <template id="typingTemplate">
    <div class="typing-indicator">
      <span></span>
      <span></span>
      <span></span>
    </div>
  </template>

  <!-- Template para mensajes -->
  <template id="messageTemplate">
    <div class="message">
      <div class="message-sender"></div>
      <div class="message-content"></div>
      <div class="message-time"></div>
    </div>
  </template>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.1/socket.io.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Referencias DOM
      const sidebar = document.getElementById('sidebar');
      const toggleSidebar = document.getElementById('toggleSidebar');
      const sidebarOverlay = document.getElementById('sidebarOverlay');
      const messageForm = document.getElementById('messageForm');
      const messageInput = document.getElementById('messageInput');
      const messagesContainer = document.getElementById('messagesContainer');
      const connectionStatus = document.getElementById('connectionStatus');
      const statusIndicator = connectionStatus.querySelector('.status-indicator');
      const statusText = connectionStatus.querySelector('span:not(.status-indicator)');
      
      // Función para detección de dispositivo
      function isMobileDevice() {
        return window.innerWidth <= 768;
      }
      
      // Control de la barra lateral
      toggleSidebar.addEventListener('click', function() {
        sidebar.classList.toggle('expanded');
        
        if (sidebar.classList.contains('expanded') && isMobileDevice()) {
          sidebarOverlay.classList.add('active');
        }
      });
      
      // Cerrar la barra lateral al hacer clic en el overlay
      sidebarOverlay.addEventListener('click', function() {
        sidebar.classList.remove('expanded');
        sidebarOverlay.classList.remove('active');
      });
      
      // Adaptar la interfaz al cambiar el tamaño de la ventana
      window.addEventListener('resize', function() {
        if (!isMobileDevice() && sidebarOverlay.classList.contains('active')) {
          sidebarOverlay.classList.remove('active');
        }
        
        if (!isMobileDevice() && sidebar.classList.contains('expanded')) {
          sidebar.classList.remove('expanded');
        }
      });
      
      // Simulación de conexión websocket (para demostración)
      setTimeout(function() {
        statusIndicator.classList.remove('disconnected');
        statusIndicator.classList.add('connected');
        statusText.textContent = 'Conectado';
      }, 2000);
      
      // Simulación de mensajes (para demostración)
      function addMessage(text, isOutgoing = false, sender = '') {
        // Eliminar el mensaje de "vacío" si existe
        const emptyMessage = messagesContainer.querySelector('.empty-messages');
        if (emptyMessage) {
          emptyMessage.remove();
        }
        
        // Crear el mensaje usando el template
        const template = document.getElementById('messageTemplate');
        const messageElement = template.content.cloneNode(true).querySelector('.message');
        
        // Configurar la clase según el tipo de mensaje
        messageElement.classList.add(isOutgoing ? 'outgoing' : 'incoming');
        
        // Configurar el contenido
        const senderElement = messageElement.querySelector('.message-sender');
        const contentElement = messageElement.querySelector('.message-content');
        const timeElement = messageElement.querySelector('.message-time');
        
        // Mostrar el remitente solo si se proporciona
        if (sender) {
          senderElement.textContent = sender;
        } else {
          senderElement.style.display = 'none';
        }
        
        contentElement.textContent = text;
        
        // Añadir hora actual
        const now = new Date();
        const timeStr = now.getHours().toString().padStart(2, '0') + ':' + 
                        now.getMinutes().toString().padStart(2, '0');
        timeElement.textContent = timeStr;
        
        // Añadir al contenedor
        messagesContainer.appendChild(messageElement);
        
        // Scroll al final
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
        
        return messageElement;
      }
      
      // Mostrar indicador de escritura
      function showTypingIndicator() {
        const template = document.getElementById('typingTemplate');
        const indicator = template.content.cloneNode(true);
        messagesContainer.appendChild(indicator);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
        return messagesContainer.querySelector('.typing-indicator');
      }
      
      // Ocultar indicador de escritura
      function hideTypingIndicator(indicator) {
        if (indicator && indicator.parentNode) {
          indicator.parentNode.removeChild(indicator);
        }
      }
      
      // Manejo del envío de mensajes
      messageForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const text = messageInput.value.trim();
        if (!text) return;
        
        // Añadir mensaje del usuario
        addMessage(text, true);
        
        // Limpiar el input
        messageInput.value = '';
        
        // Simular respuesta (para demostración)
        const typingIndicator = showTypingIndicator();
        
        setTimeout(function() {
          hideTypingIndicator(typingIndicator);
          
          // Respuesta simulada
          if (text.toLowerCase().includes('hola')) {
            addMessage('¡Hola! ¿En qué puedo ayudarte hoy?', false, 'Asistente');
          } else if (text.toLowerCase().includes('ayuda')) {
            addMessage('Estoy aquí para ayudarte. ¿Qué necesitas?', false, 'Asistente');
          } else {
            addMessage('Gracias por tu mensaje. Un agente te responderá pronto.', false, 'Sistema');
          }
        }, 1500);
      });
      
      // Simulación de mensajes iniciales (solo para demostración)
      setTimeout(function() {
        addMessage('¡Bienvenido al sistema de chat! ¿En qué podemos ayudarte hoy?', false, 'Sistema');
      }, 1000);
      
      // Funciones de accesibilidad
      function handleTabKey(e) {
        if (e.key === 'Tab') {
          document.body.classList.add('keyboard-user');
        }
      }
      
      function handleMouseDown() {
        document.body.classList.remove('keyboard-user');
      }
      
      // Añadir listeners para mejorar accesibilidad
      document.addEventListener('keydown', handleTabKey);
      document.addEventListener('mousedown', handleMouseDown);
      
      // Función para cerrar sesión (simulación)
      window.logout = function() {
        if (confirm('¿Estás seguro de que deseas cerrar sesión?')) {
          alert('Sesión cerrada correctamente');
          // Aquí iría el código real para cerrar sesión
        }
      };
    });
    </script>